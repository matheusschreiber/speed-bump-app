// Generated by view binder compiler. Do not edit!
package org.tensorflow.lite.examples.objectdetection.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.LinearLayout;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.coordinatorlayout.widget.CoordinatorLayout;
import androidx.fragment.app.FragmentContainerView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;
import org.tensorflow.lite.examples.objectdetection.R;

public final class ActivityMainBinding implements ViewBinding {
  @NonNull
  private final CoordinatorLayout rootView;

  @NonNull
  public final ImageView alertDetection;

  @NonNull
  public final LinearLayout buttonCameraMode;

  @NonNull
  public final LinearLayout buttonMetricsMode;

  @NonNull
  public final LinearLayout buttonTestImage;

  @NonNull
  public final FragmentContainerView fragmentContainer;

  private ActivityMainBinding(@NonNull CoordinatorLayout rootView,
      @NonNull ImageView alertDetection, @NonNull LinearLayout buttonCameraMode,
      @NonNull LinearLayout buttonMetricsMode, @NonNull LinearLayout buttonTestImage,
      @NonNull FragmentContainerView fragmentContainer) {
    this.rootView = rootView;
    this.alertDetection = alertDetection;
    this.buttonCameraMode = buttonCameraMode;
    this.buttonMetricsMode = buttonMetricsMode;
    this.buttonTestImage = buttonTestImage;
    this.fragmentContainer = fragmentContainer;
  }

  @Override
  @NonNull
  public CoordinatorLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityMainBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityMainBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_main, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityMainBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.alert_detection;
      ImageView alertDetection = ViewBindings.findChildViewById(rootView, id);
      if (alertDetection == null) {
        break missingId;
      }

      id = R.id.buttonCameraMode;
      LinearLayout buttonCameraMode = ViewBindings.findChildViewById(rootView, id);
      if (buttonCameraMode == null) {
        break missingId;
      }

      id = R.id.buttonMetricsMode;
      LinearLayout buttonMetricsMode = ViewBindings.findChildViewById(rootView, id);
      if (buttonMetricsMode == null) {
        break missingId;
      }

      id = R.id.buttonTestImage;
      LinearLayout buttonTestImage = ViewBindings.findChildViewById(rootView, id);
      if (buttonTestImage == null) {
        break missingId;
      }

      id = R.id.fragment_container;
      FragmentContainerView fragmentContainer = ViewBindings.findChildViewById(rootView, id);
      if (fragmentContainer == null) {
        break missingId;
      }

      return new ActivityMainBinding((CoordinatorLayout) rootView, alertDetection, buttonCameraMode,
          buttonMetricsMode, buttonTestImage, fragmentContainer);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
